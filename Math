import java.util.Scanner;
import java.util.Random;

public class MathCalculations {
    
    private static final double SPEED_OF_LIGHT = 299792458; // speed of light in m/s

    public static void main(String[] args) {
        Random random = new Random();
        Scanner scanner = new Scanner(System.in);

        // 1. Generate a random number in the range 0 to 90 inclusive
        int randomAngle = random.nextInt(91); // 0 to 90 inclusive
        double sineValue = Math.sin(Math.toRadians(randomAngle));
        double cosineValue = Math.cos(Math.toRadians(randomAngle));
        double tangentValue = Math.tan(Math.toRadians(randomAngle));

        // Display sine, cosine, and tangent values rounded to 3 decimal places
        System.out.printf("Number: %d Sine: %.3f Cosine: %.3f Tangent: %.3f%n",
                randomAngle, round(sineValue, 3), round(cosineValue, 3), round(tangentValue, 3));

        // 2. Generate a random real number for radius (1.0 to 20.0)
        double radius = 1.0 + (19.0 * random.nextDouble());
        double area = Math.PI * Math.pow(radius, 2);
        double volume = (4.0 / 3.0) * Math.PI * Math.pow(radius, 3);

        // Display area and volume rounded to 2 decimal places
        System.out.printf("Radius: %.2f Area: %.2f Volume: %.2f%n", radius, round(area, 2), round(volume, 2));

        // 3. Generate a random real number in the range 1000.0 to 100,000,000.0
        double highValue = 1000.0 + (random.nextDouble() * (100000000.0 - 1000.0));
        double sqrtValue = Math.sqrt(highValue);
        double lnValue = Math.log(highValue);
        double log10Value = Math.log10(highValue);

        // Display square root, natural log, and log10 rounded to 5 decimal places
        System.out.printf("High Value: %.2f Square Root: %.5f Natural Log: %.5f Log10: %.5f%n",
                highValue, round(sqrtValue, 5), round(lnValue, 5), round(log10Value, 5));

        // 4. Calculate mass required to generate that much energy
        double mass = highValue / (SPEED_OF_LIGHT * SPEED_OF_LIGHT); // E = mc^2 => m = E/c^2
        System.out.printf("Mass (grams): %.5f%n", roundAvoid(mass, 5));

        // 5. User input for power calculation
        System.out.print("Enter a real number: ");
        double userNumber = scanner.nextDouble();
        System.out.print("Enter an integer exponent: ");
        int exponent = scanner.nextInt();
        double powerResult = Math.pow(userNumber, exponent);
        
        System.out.print("Enter the number of decimal places for rounding: ");
        int decimalPlaces = scanner.nextInt();
        System.out.printf("Result: %.5f%n", roundAvoid(powerResult, decimalPlaces));

        scanner.close();
    }

    // Method to round a number to a specified number of decimal places
    public static double round(double value, int places) {
        double scale = Math.pow(10, places);
        return Math.round(value * scale) / scale;
    }

    // Method to round a number to a specified number of decimal places without rounding up
    public static double roundAvoid(double value, int places) {
        double scale = Math.pow(10, places);
        return Math.floor(value * scale) / scale;
    }
}
